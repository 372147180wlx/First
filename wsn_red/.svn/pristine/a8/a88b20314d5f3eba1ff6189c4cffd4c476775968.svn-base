package com.itheima.rbclient.ui.fragment;

import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.support.v4.view.ViewPager;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.AdapterView;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.Toast;

import com.android.volley.VolleyError;
import com.itheima.rbclient.App;
import com.itheima.rbclient.R;
import com.itheima.rbclient.RBConstants;
import com.itheima.rbclient.adapter.HomeAdapter;
import com.itheima.rbclient.adapter.VpHomeAdapter;
import com.itheima.rbclient.bean.HomeVPResponse;
import com.itheima.rbclient.bean.KeyWordEvent;
import com.itheima.rbclient.protocol.Api;
import com.itheima.rbclient.ui.fragment.threelevelcategory.CategoryFirst;

import org.senydevpkg.net.HttpLoader;
import org.senydevpkg.net.resp.IResponse;

import java.util.ArrayList;
import java.util.List;

import butterknife.ButterKnife;
import butterknife.InjectView;
import butterknife.OnClick;
import de.greenrobot.event.EventBus;


public class HomeFragment extends BaseFragment implements HttpLoader.HttpListener, View.OnClickListener {

    @InjectView(R.id.lv_home)
    ListView lvHome;
    @InjectView(R.id.ev_homekeyWord)
    EditText evHomekeyWord;
    @InjectView(R.id.bt_homesearch)
    Button btHomesearch;


    private Handler handler = new Handler() {
        @Override
        public void handleMessage(Message msg) {
            //切换下一页
            vpHeader.setCurrentItem(vpHeader.getCurrentItem() + 1);
            //继续发送空消息
            handler.sendEmptyMessageDelayed(0, 2000);
            super.handleMessage(msg);
        }
    };
    private List<HomeVPResponse.HomeTopicBean> homeTopic;
    private VpHomeAdapter adapter;
    private View headerView;
    private ViewPager vpHeader;

    @Override
    public void onStart() {
        super.onStart();
        //ViewPager轮播启动
        handler.sendEmptyMessageDelayed(0, 2000);
    }

    @Override
    public void onStop() {
        super.onStop();
        //移除消息
        handler.removeMessages(0);
    }

    @Override
    protected View createView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        return inflater.inflate(R.layout.list_home, null);
    }

    @Override
    protected void initData() {
        //ViewPager填充数据
        homeTopic = new ArrayList<HomeVPResponse.HomeTopicBean>();
        adapter = new VpHomeAdapter(homeTopic);

        //添加头部
        addHeader();
        vpHeader.setAdapter(adapter);
        vpHeader.setCurrentItem(1000000 * 6 / 2);
        //ListView填充数据
        lvHome.setAdapter(new HomeAdapter());
    }

    /**
     * 添加头部
     */
    protected void addHeader() {
        headerView = View.inflate(getActivity(), R.layout.layout_home_header, null);
        vpHeader = (ViewPager) headerView.findViewById(R.id.vp_header);
        //根据图片的宽高比，去动态设定viewPager的高度，让它的宽高比和图片能保持一致
        //1.获取屏幕的宽度
        int width = getActivity().getWindowManager().getDefaultDisplay().getWidth();
        //2.根据图片的宽高比获取对应的高度,(宽高比是2.65)
        float height = width / 1.8f;
        //3.将高度设置给viewPager
        LinearLayout.LayoutParams params = (LinearLayout.LayoutParams) vpHeader.getLayoutParams();
        params.height = (int) height;
        vpHeader.setLayoutParams(params);

        lvHome.addHeaderView(headerView);
    }


    /**
     * 请求网络的方法
     */
    @Override
    protected void requestNetData() {
        //从网络上请求数据
        Api.getHomeData(this).setTag(this);

    }


    @Override
    protected void handleUserInput() {


        lvHome.setOnItemClickListener(new AdapterView.OnItemClickListener() {
            @Override
            public void onItemClick(AdapterView<?> parent, View view, int position, long id) {
                //头布局个数
                int headerViewCount = lvHome.getHeaderViewsCount();
                position -= headerViewCount;

                switch (position) {
                    case 0:
                        Toast.makeText(getActivity(), "限时抢购", Toast.LENGTH_SHORT).show();
                        swichToChildFragment(FragmentInstanceManager.getInstance().getFragment(LimitbuyFragment.class), true);
                        break;
                    case 1:
                        swichToChildFragment(FragmentInstanceManager.getInstance().getFragment(TopicFragment.class), true);
                        Toast.makeText(getActivity(), "促销快报", Toast.LENGTH_SHORT).show();
                        break;
                    case 2:
                        swichToChildFragment(FragmentInstanceManager.getInstance().getFragment(NewproductFragment.class), true);
                        Toast.makeText(getActivity(), "新品上架", Toast.LENGTH_SHORT).show();
                        break;
                    case 3:
                        swichToChildFragment(FragmentInstanceManager.getInstance().getFragment(HotproductFragment.class), true);
                        Toast.makeText(getActivity(), "热门单品", Toast.LENGTH_SHORT).show();
                        break;
                    case 4:
                        swichToChildFragment(FragmentInstanceManager.getInstance().getFragment(BrandFragment.class), true);
                        Toast.makeText(getActivity(), "推荐品牌", Toast.LENGTH_SHORT).show();
                        break;
                    case 5:
//                        swichToChildFragment(new SearchFragment(), true);
                        swichToChildFragment(FragmentInstanceManager.getInstance().getFragment(CategoryFirst.class), true);
                        Toast.makeText(getActivity(), "分类列表", Toast.LENGTH_SHORT).show();
                        break;
                }
            }
        });
    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        // TODO: inflate a fragment view
        View rootView = super.onCreateView(inflater, container, savedInstanceState);
        ButterKnife.inject(this, rootView);
        return rootView;
    }

    @Override
    public void onDestroyView() {
        super.onDestroyView();
        ButterKnife.reset(this);
    }


    @Override
    public void onGetResponseSuccess(int requestCode, IResponse response) {
        if (requestCode == RBConstants.REQUEST_CODE_HOME_LIST && response instanceof HomeVPResponse) {
            homeTopic = ((HomeVPResponse) response).homeTopic;
            System.out.println("拿到数据啦" + homeTopic.toString());
        }
        adapter.notifyDataSetChanged(homeTopic);
    }

    @Override
    public void onGetResponseError(int requestCode, VolleyError error) {
        System.out.println("没拿到数据");
    }


    @OnClick({R.id.bt_homesearch})
    public void onClick(View view) {
        switch (view.getId()) {
            case R.id.bt_homesearch:
                String keyWord = evHomekeyWord.getText().toString().trim();
                if (keyWord == null || "".equals(keyWord)) {
                    Toast.makeText(App.context, "请输入搜索关键字", Toast.LENGTH_SHORT).show();
                } else {
                    swichToChildFragment(new SearchReslutFragment(), false);//跳到另一个界面
                    KeyWordEvent keyWordEvent = new KeyWordEvent(keyWord);
                    EventBus.getDefault().postSticky(keyWordEvent);
                }

                break;
        }
    }
}
