package com.itheima.rbclient.ui.fragment;

import android.os.Bundle;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ListView;

import com.android.volley.VolleyError;
import com.itheima.rbclient.App;
import com.itheima.rbclient.LoadStateLayout;
import com.itheima.rbclient.R;
import com.itheima.rbclient.RBConstants;
import com.itheima.rbclient.adapter.SearchResultAdapter;
import com.itheima.rbclient.bean.SearchResult;

import org.senydevpkg.net.HttpLoader;
import org.senydevpkg.net.HttpParams;
import org.senydevpkg.net.resp.IResponse;

import java.util.ArrayList;
import java.util.List;

import butterknife.ButterKnife;
import butterknife.InjectView;
import de.greenrobot.event.EventBus;

/**
 * Created by KCL on 2016/8/7.
 */
public class SearchReslutFragment extends BaseFragment implements HttpLoader.HttpListener {
    @InjectView(R.id.lv_serach_content)
    ListView lvSerachContent;
    private String keyWord = null;
    private List<SearchResult.ProductListBean> productList;
    private LoadStateLayout searchResultView;
    private View emptyView;
    private View contentView;
    private View loadingView;
    private SearchResultAdapter adapter;


    @Override
    protected View createView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        EventBus.getDefault().registerSticky(this);
        //EventBus.getDefault().getStickyEvent(String);
        View view = initView();
        return view;
    }

    private View initView() {
        View view = View.inflate(App.context, R.layout.fragment_search_result, null);
        ButterKnife.inject(this,view);
        searchResultView = (LoadStateLayout) view.findViewById(R.id.lp_search_result);
        searchResultView.setLoadingView(R.layout.fragment_searchresult_loading);
        searchResultView.setEmptyView(R.layout.fragment_searchresult_empty);
        loadingView = searchResultView.getLoadingView();
        contentView = searchResultView.getContentView();
        emptyView = searchResultView.getEmptyView();
        return view;

    }

    public void onEvent(Object keyWord) {
        System.out.println(keyWord + "");
        this.keyWord = keyWord + "";
    }


    @Override
    protected void initData() {
        productList = new ArrayList<>();
        adapter = new SearchResultAdapter( productList);
        lvSerachContent.setAdapter(adapter);
    }

    @Override
    protected void handleUserInput() {

    }

    @Override
    protected void requestNetData() {
        HttpParams params = new HttpParams();
        params.put("page", "1").put("pageNum", "10").put("keyword", keyWord).put("orderby", "saleDown");
        HttpLoader.getInstance(App.context).get(RBConstants.URL_SEARCH, params, SearchResult.class, RBConstants.REQUEST_CODE_SEARCH, this);
    }

    @Override
    public void onGetResponseSuccess(int requestCode, IResponse response) {
        if (requestCode == RBConstants.REQUEST_CODE_SEARCH && response instanceof SearchResult) {
            productList = ((SearchResult) response).getProductList();//查询到的商品列表
            if (productList.size() > 0) {
                //查询到了商品
                System.out.println("返回了商品"+productList.toString());
                searchResultView.setState(LoadStateLayout.STATE_SUCCESS);
                adapter.notifyDataSetChanged(productList);

            } else {
                //没有查询到商品
                searchResultView.setState(LoadStateLayout.STATE_EMPTY);
            }
        } else {//网络有问题

        }

    }

    @Override
    public void onGetResponseError(int requestCode, VolleyError error) {

    }

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container, Bundle savedInstanceState) {
        // TODO: inflate a fragment view
        View rootView = super.onCreateView(inflater, container, savedInstanceState);
        ButterKnife.inject(this, rootView);
        return rootView;
    }

    @Override
    public void onDestroyView() {
        super.onDestroyView();
        ButterKnife.reset(this);
    }
}
